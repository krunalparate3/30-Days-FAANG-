#link:   https://leetcode.com/problems/palindrome-linked-list/submissions/
# two approaches

# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def isPalindrome(self, head: ListNode) -> bool:
        slow=fast=head
        while fast and fast.next:
            fast=fast.next.next
            slow=slow.next
        node=None
        while slow:
            next=slow.next
            slow.next=node
            node=slow
            slow=next
        while node: # while node and head:
            if node.val != head.val:
                return False
            node = node.next
            head = head.next
        return True
    
    """
class Solution:
    def isPalindrome(self, head: ListNode) -> bool:
        ans=0
        rev=0
        cur=head
        mul=1
        while cur:
            a=cur.val
            ans=ans*10+a
            rev=a*mul+rev
            cur=cur.next
            mul*=10
        return ans==rev
    """
